{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","deleteDoc","doc","id","attachmentRef","ref","attachmentUrl","deleteObject","toggleEditing","prev","onSubmit","event","preventDefault","updateDoc","console","log","className","type","placeholder","value","required","autoFocus","onChange","target","onClick","src","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","uid","uuidv4","uploadString","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArr","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","credentialFromResult","GithubAuthProvider","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","reloadUserObj","currentUser","args","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b055115.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\"\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDvyCrNKrGN4iOYnsxod-UGss5a2ep_bms\",\n    authDomain: \"nwitter-ab1f0.firebaseapp.com\",\n    projectId: \"nwitter-ab1f0\",\n    storageBucket: \"nwitter-ab1f0.appspot.com\",\n    messagingSenderId: \"708414183217\",\n    appId: \"1:708414183217:web:d701bce57f50cb9f524210\"\n\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { ref, deleteObject } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if (ok) {\n            await deleteDoc(doc(dbService, \"nweets\", `${nweetObj.id}`));\n            const attachmentRef = ref(storageService, `${nweetObj.attachmentUrl}`);\n            await deleteObject(attachmentRef);\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await updateDoc(doc(dbService, \"nweets\", `${nweetObj.id}`), {\n            text: newNweet,\n        })\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n    console.log(isOwner)\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your nweet\"\n                            value={newNweet}\n                            required\n                            autoFocus\n                            onChange={onChange}\n                            className=\"formInput\"\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                    {isOwner && (\n\n                        <div className=\"nweet__actions\">     <span onClick={onDeleteClick}>\n                            <FontAwesomeIcon icon={faTrash} />\n                        </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n            const response = await uploadString(attachmentRef, attachment, \"data_url\");\n            attachmentUrl = await getDownloadURL(attachmentRef);\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        try {\n            await addDoc(collection(dbService, \"nweets\"), nweetObj);\n        } catch (error) {\n            console.log(error)\n        }\n        setNweet(\"\");\n        setAttachment(\"\");\n\n    };\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const { currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )\n            }\n        </form >\n    );\n};\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { onSnapshot, collection, query, orderBy } from \"firebase/firestore\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        const q = query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\"));\n        onSnapshot(q, snapshot => {\n            const nweetArr = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setNweets(nweetArr);\n        });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport {\n    createUserWithEmailAndPassword, signInWithEmailAndPassword, GithubAuthProvider,\n    GoogleAuthProvider, signInWithPopup,\n} from \"firebase/auth\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await createUserWithEmailAndPassword(authService,\n                    email,\n                    password\n                );\n            }\n            else {\n                data = await signInWithEmailAndPassword(authService,\n                    email, password);\n            }\n            console.log(data);\n\n\n        } catch (error) {\n            setError(error.message);\n        }\n\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Creat Account\" : \"Log in\"} />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\nexport default AuthForm;","import React from \"react\";\nimport { useState } from \"react\";\nimport { authService } from \"../fbase\"\nimport {\n    createUserWithEmailAndPassword, signInWithEmailAndPassword, GithubAuthProvider,\n    GoogleAuthProvider, signInWithPopup,\n} from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Auth = () => {\n\n\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        try {\n            if (name === \"google\") {\n                provider = new GoogleAuthProvider();\n                const result = await signInWithPopup(authService, provider);\n                GoogleAuthProvider.credentialFromResult(result);\n            } else if (name === \"github\") {\n                provider = new GithubAuthProvider();\n                const result = await signInWithPopup(authService, provider);\n                GithubAuthProvider.credentialFromResult(result);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    };\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n\n            </div>\n        </div >\n    );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;","\nimport React, { useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { updateProfile } from \"@firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { getDocs, collection, query, orderBy, where } from \"firebase/firestore\";\n\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    /*const getMyNweets = async () => {\n        const docRef = collection(dbService, \"nweets\");\n        const q = query(docRef, where(\"creatorId\", \"==\", userObj.uid), orderBy(\"createdAt\", \"desc\"));\n        const nweets = await getDocs(q);\n        console.log(nweets.docs.map((doc) => doc.data()));\n    };\n\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n*/\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        if (userObj.displayName !== newDisplayName) {\n\n\n            await updateProfile(userObj, {\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n    return (\n        <>\n            <div className=\"container\">\n                <form onSubmit={onSubmit} className=\"profileForm\">\n                    <input\n                        onChange={onChange}\n                        type=\"text\"\n                        placeholder=\"Display name\"\n                        value={newDisplayName}\n                    />\n                    <input type=\"submit\" value=\"Update Profile\" />\n                </form>\n                <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                    Log Out\n                </span>\n            </div>\n        </>\n    );\n};","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Auth from \"../routes/Auth\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n\n                    </div>) : <><Router exact path=\"/\"><Auth /></Router></>}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      /* force update userObj state */\n      if (user) {\n        user.reloadUserObj = async () => {\n          setUserObj(null);\n          setUserObj(() => authService.currentUser);\n        }\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n\n      setInit(true);\n    });\n    /*  if (user) {\n        //  setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        // } else {\n        //   setIsLoggedIn(false);\n      }*/\n    // setInit(true);\n    // });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? <AppRouter\n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)}\n        userObj={userObj}\n      /> : \"Initializing...\"}\n      <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n    </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}